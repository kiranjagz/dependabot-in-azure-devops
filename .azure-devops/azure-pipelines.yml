trigger: 
  - main

pool:
  vmImage: 'ubuntu-latest'

schedules:
- cron: "2 0 * * *"
  displayName: Daily Dependabot run
  branches:
    include:
      - main
  always: true

variables:
  - name: buildConfiguration
    value: 'release'
  - name: imageToCache
    value: tingle/dependabot-azure-devops:0.14

stages:
  - stage: CheckDependencies
    displayName: 'Check Dependencies'
    jobs:
      - job: Dependabot
        displayName: 'Run Dependabot'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Cache@2
            inputs:
              key: docker | "${{ variables.imageToCache }}"
              path: $(Pipeline.Workspace)/docker
              cacheHitVar: DOCKER_CACHE_HIT
            displayName: Cache Docker Image
          - script: |
              docker load -i $(Pipeline.Workspace)/docker/cache.tar
            displayName: Restore Docker Image
            condition: and(not(canceled()), eq(variables.DOCKER_CACHE_HIT, 'true'))
          - script: |
              mkdir -p $(Pipeline.Workspace)/docker
              docker pull -q ${{ variables.imageToCache }}
              docker save -o $(Pipeline.Workspace)/docker/cache.tar ${{ variables.imageToCache }}
            displayName: Save Docker Image
            condition: and(not(canceled()), or(failed(), ne(variables.DOCKER_CACHE_HIT, 'true')))

          - task: dependabot@1
            displayName: 'Run Dependabot'
            inputs:
              useConfigFile: true

  - stage: 'BuildAndTest'
    displayName: 'Build and Test Projects'
    jobs: 
    - job: 'Build'
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Build'
        inputs:
          command: 'build'
          arguments: '--configuration $(buildConfiguration)'
          projects: '**/*.csproj'

    - job: 'Test'
      dependsOn: 'Build'
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Test'
        inputs:
          command: 'test'
          projects: 'src/Does.Stuff.Test/Does.Stuff.Test.csproj'